{"version":3,"sources":["Utils.js","App.js","index.js"],"names":["Utils","get","url","params","cb","xhr","XMLHttpRequest","onreadystatechange","readyState","DONE","statusText","alert","JSON","parse","responseText","paramList","Object","keys","map","key","_params","length","join","open","setRequestHeader","send","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","dataLoaded","contacts","deals","locations","tags","compileDeals","bind","assertThisInitialized","compileLocations","compileTags","_this2","fetchContacts","then","setState","_this3","Promise","resolve","reject","include","limit","response","_this4","forEach","deal","contact","count","value","parseInt","_this5","contactData","data","city","geoCity","geoState","country","geoCountry2","_this6","tag","id","mappings","contactTags","contactTag","push","_this7","react_default","a","createElement","className","location","_location","filter","field","trim","email","firstName","lastName","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.fdc784a4.chunk.js","sourcesContent":["var Utils = {\n  \n  get: function(url, params, cb) {\n    var xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        if (xhr.statusText !== 'OK') {\n          alert('Error retreiving contacts');\n          return\n        }\n        cb(JSON.parse(xhr.responseText));\n      }\n    }\n    var paramList = Object.keys(params).map(function(key){\n      var param = params[key];\n      return key + '=' + param\n    });\n    var _params = ''\n    if (paramList.length > 0) {\n      _params = '?' + paramList.join('&')\n    }\n    xhr.open('GET', 'https://cors-anywhere.herokuapp.com/' + url + _params, true);\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    xhr.setRequestHeader('Api-Token', '0f7e5c9167768f6bb0a6e09e335ce464da7cb5e7008b989f0057266c26342424a4d8d3e5');\n    xhr.send();\n  }\n\n}\n\nexport default Utils;","import React from 'react';\nimport Utils from './Utils';\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataLoaded: false,\n      contacts: null,\n      deals: null,\n      locations: null,\n      tags: null\n    };\n    this.compileDeals = this.compileDeals.bind(this);\n    this.compileLocations = this.compileLocations.bind(this);\n    this.compileTags = this.compileTags.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchContacts()\n    .then(this.compileDeals)\n    .then(this.compileLocations)\n    .then(this.compileTags)\n    .then(() => {\n      this.setState({\n        dataLoaded: true\n      });\n    })\n  }\n\n  fetchContacts() {\n    return new Promise((resolve, reject) => {\n      var url = 'https://lamppoststudios.api-us1.com/api/3/contacts';\n      var params = {\n        include: 'contactTags.tag,deals,contactData',\n        limit: 100\n      }\n      Utils.get(url, params, (response) => {\n        this.setState({\n          contacts: response.contacts,\n          tags: response.tags\n        }, () => {\n          resolve(response);\n        });\n      });\n    })\n  }\n\n  compileDeals(response) {\n    return new Promise((resolve, reject) => {\n      var deals = {}\n      response.deals.forEach((deal) => {\n        // If contact deals object doesn't exist, create\n        if (!(deal.contact in deals)) {\n          deals[deal.contact] = {\n            count: 0,\n            value: 0\n          }\n        }\n        // Increment deal count and add value to total value\n        deals[deal.contact].count++\n        deals[deal.contact].value += parseInt(deal.value)\n      });\n      this.setState({\n        deals: deals\n      }, () => {\n        resolve(response);\n      });\n    })\n  }\n\n  compileLocations(response) {\n    return new Promise((resolve, reject) => {\n      var locations = {}\n      response.contactData.forEach((data) => {\n        // If contact locations object doesn't exist, create\n        if (!(data.contact in locations)) {\n          locations[data.contact] = {\n            city: data.geoCity,\n            state: data.geoState,\n            country: data.geoCountry2\n          }\n        }\n      });\n      this.setState({\n        locations: locations\n      }, () => {\n        resolve(response);\n      });\n    })\n  }\n\n  compileTags(response) {\n    return new Promise((resolve, reject) => {\n      // First, compile tags by id\n      var tags = {}\n      response.tags.forEach((tag) => {\n        // If tag object doesn't exist, create\n        if (!(tag.id in tags)) {\n          tags[tag.id] = tag.tag\n        }\n      });\n      // Next, add mappings to specific contacts\n      var mappings = {}\n      response.contactTags.forEach((contactTag) => {\n        // If mapping object doesn't exist, create\n        if (!(contactTag.contact in mappings)) {\n          mappings[contactTag.contact] = []\n        }\n        // Add tag value to list\n        mappings[contactTag.contact].push(tags[contactTag.tag])\n      });\n      this.setState({\n        tags: mappings\n      }, () => {\n        resolve(response);\n      });\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <table>\n          <tbody>\n            <tr>\n              <th>Contact</th>\n              <th>Total Value</th>\n              <th>Location</th>\n              <th>Deals</th>\n              <th>Tags</th>\n            </tr>\n            {this.state.dataLoaded &&\n              this.state.contacts.map((contact) => {\n                var value = 0;\n                var deals = 0;\n                if (contact.id in this.state.deals) {\n                  value = this.state.deals[contact.id].value\n                  deals = this.state.deals[contact.id].count\n                }\n                var location = '';\n                if (contact.id in this.state.locations) {\n                  var _location = this.state.locations[contact.id]\n                  var locationSegments = ['city', 'state', 'country'].filter(function(field) {\n                    return _location[field].trim().length > 0;\n                  }).map(function(field) {\n                    return _location[field];\n                  })\n                  location = locationSegments.join(', ')\n                }\n                var tags = '';\n                if (contact.id in this.state.tags) {\n                  tags = this.state.tags[contact.id].join(', ')\n                }\n                return (\n                  <tr key={contact.email}>\n                    <td>{contact.firstName} {contact.lastName}</td>\n                    <td>${value}</td>\n                    <td>{location}</td>\n                    <td>{deals}</td>\n                    <td>{tags}</td>\n                  </tr>\n                );\n              })\n            }\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}